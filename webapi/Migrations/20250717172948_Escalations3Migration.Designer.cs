// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.Domain.Helpers;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250717172948_Escalations3Migration")]
    partial class Escalations3Migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi.Domain.Models.EscalationLevel", b =>
                {
                    b.Property<int>("LevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelID"));

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelID");

                    b.ToTable("EscalationLevels");
                });

            modelBuilder.Entity("webapi.Domain.Models.EscalationMapping", b =>
                {
                    b.Property<int>("MappingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MappingID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("Level1Delay")
                        .HasColumnType("time");

                    b.Property<int>("Level1ProfileID")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("Level2Delay")
                        .HasColumnType("time");

                    b.Property<int?>("Level2ProfileID")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("Level3Delay")
                        .HasColumnType("time");

                    b.Property<int?>("Level3ProfileID")
                        .HasColumnType("int");

                    b.Property<int>("PriorityID")
                        .HasColumnType("int");

                    b.Property<int>("SubcategoryID")
                        .HasColumnType("int");

                    b.HasKey("MappingID");

                    b.ToTable("EscalationMappings");
                });

            modelBuilder.Entity("webapi.Domain.Models.EscalationProfile", b =>
                {
                    b.Property<int>("ProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EscalationLevelID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfileID");

                    b.HasIndex("EscalationLevelID");

                    b.ToTable("EscalationProfiles");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdCategories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("HdCategories");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdChannels", b =>
                {
                    b.Property<int>("ChannelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChannelID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChannelID");

                    b.ToTable("HdChannels");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdComments", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TicketFlag")
                        .HasColumnType("bit");

                    b.Property<int>("TicketID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.ToTable("HdComments");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdCompanies", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyID");

                    b.ToTable("HdCompanies");

                    b.HasData(
                        new
                        {
                            CompanyID = 1,
                            Description = "VOCALCOM AE"
                        });
                });

            modelBuilder.Entity("webapi.Domain.Models.HdDepartments", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("HdDepartments");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdEscalation", b =>
                {
                    b.Property<int>("EscalationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EscalationID"));

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Emails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("levelID")
                        .HasColumnType("int");

                    b.HasKey("EscalationID");

                    b.ToTable("HdEscalation");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdEscalationTimers", b =>
                {
                    b.Property<int>("TimerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimerID"));

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.HasKey("TimerID");

                    b.ToTable("HdEscalationTimers");

                    b.HasData(
                        new
                        {
                            TimerID = 1,
                            Hours = 8
                        });
                });

            modelBuilder.Entity("webapi.Domain.Models.HdFileAttachments", b =>
                {
                    b.Property<int>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileID"));

                    b.Property<int?>("CommentID")
                        .HasColumnType("int");

                    b.Property<string>("FileData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("TicketID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("FileID");

                    b.ToTable("HdFileAttachments");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdLevels", b =>
                {
                    b.Property<int>("LevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelID");

                    b.ToTable("HdLevels");

                    b.HasData(
                        new
                        {
                            LevelID = 1,
                            Description = "Low"
                        },
                        new
                        {
                            LevelID = 2,
                            Description = "Medium"
                        },
                        new
                        {
                            LevelID = 3,
                            Description = "High"
                        });
                });

            modelBuilder.Entity("webapi.Domain.Models.HdLogs", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("LogID");

                    b.ToTable("HdLogs");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdRequests", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestID");

                    b.ToTable("HdRequests");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdStatus", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("HdStatuses");

                    b.HasData(
                        new
                        {
                            StatusID = 1,
                            Description = "New"
                        },
                        new
                        {
                            StatusID = 2,
                            Description = "In progress"
                        },
                        new
                        {
                            StatusID = 3,
                            Description = "Closed"
                        },
                        new
                        {
                            StatusID = 4,
                            Description = "Resolved"
                        });
                });

            modelBuilder.Entity("webapi.Domain.Models.HdSubCategories", b =>
                {
                    b.Property<int>("SubCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategoryID");

                    b.ToTable("HdSubCategories");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdTickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssingedToBackOfficeID")
                        .HasColumnType("int");

                    b.Property<int?>("AssingedToUserID")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("ChannelID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentReply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailAlert")
                        .HasColumnType("bit");

                    b.Property<int>("EscalationLevel")
                        .HasColumnType("int");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit");

                    b.Property<int>("Indice")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequestID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResolvedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SMSAlert")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateByUser")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HdTickets");
                });

            modelBuilder.Entity("webapi.Domain.Models.HdUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DarkMode")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Department_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAgent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBackOffice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDepartmentRestrictedSupervisor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperVisor")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLogoutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastPasswordChange")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HdUsers");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Created_at = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            DarkMode = false,
                            Deleted = false,
                            Department_Id = "0",
                            Department_Name = "0",
                            Disabled = false,
                            Email = "admin.ae@vocalcom.com",
                            Firstname = "Administrator",
                            HostName = "locahost",
                            IPAddress = "127.0.0.1",
                            IsAdministrator = true,
                            IsAgent = false,
                            IsBackOffice = false,
                            IsDepartmentRestrictedSupervisor = false,
                            IsSuperVisor = false,
                            LastLogoutDate = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            LastPasswordChange = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            LastSeen = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            Lastname = "Hermes",
                            Password = "$2a$10$OtpZqvFlEvb6wnWkbpV7desp93UQqUp/cDpBbLw.jrsM7AYzrnowC",
                            Phone = "+97144464100",
                            Status = "Offline",
                            Updated_at = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            User_Id = "1",
                            Username = "admin"
                        },
                        new
                        {
                            Id = -4,
                            Created_at = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            DarkMode = false,
                            Deleted = false,
                            Department_Id = "0",
                            Department_Name = "0",
                            Disabled = false,
                            Email = "backoffice.ae@vocalcom.com",
                            Firstname = "Back-Office",
                            HostName = "locahost",
                            IPAddress = "127.0.0.1",
                            IsAdministrator = false,
                            IsAgent = false,
                            IsBackOffice = true,
                            IsDepartmentRestrictedSupervisor = false,
                            IsSuperVisor = false,
                            LastLogoutDate = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            LastPasswordChange = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            LastSeen = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            Lastname = "Hermes",
                            Password = "$2a$10$s4c2YfX.NawYHkbGkCL5RuYRn/4FFN4IKjnjR42BPV69dWbE9bVvi",
                            Phone = "+97144464100",
                            Status = "Offline",
                            Updated_at = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            User_Id = "4",
                            Username = "backoffice"
                        },
                        new
                        {
                            Id = -2,
                            Created_at = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            DarkMode = false,
                            Deleted = false,
                            Department_Id = "0",
                            Department_Name = "0",
                            Disabled = false,
                            Email = "agent.ae@vocalcom.com",
                            Firstname = "Agent",
                            HostName = "locahost",
                            IPAddress = "127.0.0.1",
                            IsAdministrator = false,
                            IsAgent = true,
                            IsBackOffice = false,
                            IsDepartmentRestrictedSupervisor = false,
                            IsSuperVisor = false,
                            LastLogoutDate = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            LastPasswordChange = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            LastSeen = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            Lastname = "Hermes",
                            Password = "$2a$10$3O5T/oHS4OgJA736xurfCeCeW2/sHASOtvcGdJu.ZijoZQ5A0JOji",
                            Phone = "+97144464100",
                            Status = "Offline",
                            Updated_at = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            User_Id = "2",
                            Username = "agent"
                        },
                        new
                        {
                            Id = -3,
                            Created_at = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            DarkMode = false,
                            Deleted = false,
                            Department_Id = "0",
                            Department_Name = "0",
                            Disabled = false,
                            Email = "supervisor.ae@vocalcom.com",
                            Firstname = "Supervisor",
                            HostName = "locahost",
                            IPAddress = "127.0.0.1",
                            IsAdministrator = false,
                            IsAgent = false,
                            IsBackOffice = false,
                            IsDepartmentRestrictedSupervisor = false,
                            IsSuperVisor = true,
                            LastLogoutDate = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            LastPasswordChange = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            LastSeen = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            Lastname = "Hermes",
                            Password = "$2a$10$A6./5UGQgY3tWWObwNQ2vOS/EyI/7Kgjpbr5h9dIs6OVP7ZDOBCku",
                            Phone = "+97144464100",
                            Status = "Offline",
                            Updated_at = new DateTime(2025, 7, 17, 17, 29, 48, 91, DateTimeKind.Utc).AddTicks(3779),
                            User_Id = "3",
                            Username = "supervisor"
                        });
                });

            modelBuilder.Entity("webapi.Domain.Models.SmtpSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<bool>("UseDefaultCredentials")
                        .HasColumnType("bit");

                    b.Property<bool>("UseSsl")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SmtpSettings");
                });

            modelBuilder.Entity("webapi.Domain.Models.EscalationProfile", b =>
                {
                    b.HasOne("webapi.Domain.Models.EscalationLevel", null)
                        .WithMany("Profiles")
                        .HasForeignKey("EscalationLevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("webapi.Domain.Models.EscalationLevel", b =>
                {
                    b.Navigation("Profiles");
                });
#pragma warning restore 612, 618
        }
    }
}
